#include <iostream>
#include <string>
#include "Character.h"
#include "Elf.h"
using namespace std;

Elf::Elf(const string &name, double health, double attackStrength, const string &family)
:Character(ELF, name, health, attackStrength), familyName(family)
{}
  
void Elf::attack(Character &nameOfCharacter)
{
    if(nameOfCharacter.getType() == ELF)
    {
        Elf &opp= dynamic_cast<Elf &>(nameOfCharacter);
        if(opp.familyName == this->familyName)
        { 
            cout << "Elf " << this->name << " does not attack Elf " << nameOfCharacter.getName() << "." << endl;
            cout << "They are both members of the " << opp.familyName << " family." << endl;
            return;
        }
        else
        {
            //Not same family
            double damage= 0.0;
            damage= (static_cast<double>(health) / static_cast<double>(MAX_HEALTH)) * static_cast<double>(attackStrength);
            nameOfCharacter.damage(damage);
      
            cout << "Elf " << this->name << " shoots an arrow at " << nameOfCharacter.getName() << " --- TWANG!!" << endl;
            cout << nameOfCharacter.getName() << " takes " << damage << " damage." << endl;
            return;
        }
    }
    double damage= 0.0;
    damage= (static_cast<double>(health) / static_cast<double>(MAX_HEALTH)) * static_cast<double>(attackStrength);
    nameOfCharacter.damage(damage);
      
    cout << "Elf " << this->name << " shoots an arrow at " << nameOfCharacter.getName() << " --- TWANG!!" << endl;
    cout << nameOfCharacter.getName() << " takes " << damage << " damage." << endl;
    return;
}
